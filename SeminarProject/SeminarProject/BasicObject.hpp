#pragma once
#include "LoadFile.hpp"


/*
全アクターの必要な要素を持ったクラス
*/
class BasicObject
{
protected:
	/// モデルに関する---------------------------------------

	// モデルのハンドル
	int modelHandle;

	// モデルの高さ
	float modelHeight;

	// モデルの横幅
	float modelWidth;

	// 画面外に外れて描画させなくするまでのカウント
	int notViewCount;


	/// 足元影に関する----------------------------------------

	// 足元影の高さ
	float shadowHeight;

	// 足元影のサイズ
	float shadowSize;

	// 足元影のプロセス
	bool ShadowFoot(int shadowModel);

	// 足元影のエリア
	VECTOR area;


private:
	/// 影に関する--------------------------------------------

	// 周囲のポリゴンを代入する構造体
	MV1_COLL_RESULT_POLY_DIM ShadowHitResDim;

	// 影のポリゴンの構造体
	MV1_COLL_RESULT_POLY *ShadowHitRes;

	// 影の行列
	VERTEX3D ShadowVertex[3];

	// 影の座標
	VECTOR ShadowSlideVec;

	// 影のハンドル
	int shadowHandle;

	// オプションでの回転数
	int optionRotaCount;

	// オプションでもモデル表示カウント
	int optionModelDrawCount;


	/// ムーブ6のみに関する変数-------------------------------

	// 円の半径
	float move6_circle;

	// 線の動き
	float move6_line;


public:
	// コンストラクタ
	BasicObject();

	// コピーコンストラクタ
	BasicObject(bool shadowDo);

	// デストラクタ
	virtual ~BasicObject();


	// 描画
	void ModelDraw();

	// オプション用モデル描画
	void OptionActorDraw();

	// オプション用モデル描画の準備
	void OptionActorDrawBefore();

	// オプション用モデル描画の後始末
	virtual void OptionActorDrawAfter() = 0;

	// ムーブ6にて地面に沈める
	void Move6SetDownArea();


	/// ゲッターセッター--------------------------------------

	// 座標を渡す
	const VECTOR GetArea() const { return area; }

	// 縦幅を渡す
	const float GetHeight() const { return modelHeight; }

	// 横幅を渡す
	const float GetWidth() const { return modelWidth; }
};

